#pragma once

namespace ImpMaterials {
    static const G4String kCEBR3 = "cebr3";
    static const G4double CEBR3_DENSITY = 5.1 * g / cm3;
    static constexpr G4double BR_MASS_FRAC = 0.631108;
    static constexpr G4double CE_MASS_FRAC = 1 - BR_MASS_FRAC;

    // scintillation
    static const G4String kSCINT_YIELD = "SCINTILLATIONYIELD";
    static const G4String kOPTICAL_FAST_COMP = "FASTCOMPONENT";
    static const G4String kFAST_TIME_CONSTANT = "FASTTIMECONSTANT";
    static const G4String kRESOLUTION_SCALE = "RESOLUTIONSCALE";

    // optical photon stuff
    static const G4String kREFR_IDX = "RINDEX";
    static const G4String kREFR_IDX_REAL = "REALRINDEX";
    static const G4String kREFR_IDX_IMAG = "IMAGINARYRINDEX";
    static const G4String kABSORPTION_LEN = "ABSLENGTH";

    // from John Sample
    // see https://opengate.readthedocs.io/en/latest/generating_and_tracking_optical_photons.html#id9
    // update 23 sep 2021: set to simple fluctuation and apply energy resolution empirically afterwards
    // update 15 nov 2021: . . . why? ? ? ? ? idk what this does. the energy resolution needs to get
    // updated in the G4 scintillation source...
    static const G4double CEBR3_SCINT_RESLN_SCALE = 1;
    // Quarati et al (not encapsulated)
    static const G4double CEBR3_SCINT_YIELD = 60000 / MeV;
    static const G4double CEBR3_DECAY_TIME_CONSTANT = 20 * ns;

    // Quarati et al, 2.5mm thickness
    const std::vector<G4double> CEBR3_SCINT_OPTICAL_ENERGIES = {
        2.58558e+00*eV, 2.60375e+00*eV, 2.62735e+00*eV, 2.65348e+00*eV, 2.68122e+00*eV, 2.71175e+00*eV, 2.74185e+00*eV, 2.77033e+00*eV,
        2.79940e+00*eV, 2.83029e+00*eV, 2.86188e+00*eV, 2.88540e+00*eV, 2.90805e+00*eV, 2.93235e+00*eV, 2.94140e+00*eV, 2.95443e+00*eV,
        2.96758e+00*eV, 2.98485e+00*eV, 2.99962e+00*eV, 3.01317e+00*eV, 3.03098e+00*eV, 3.04899e+00*eV, 3.06159e+00*eV, 3.07005e+00*eV,
        3.08139e+00*eV, 3.09426e+00*eV, 3.10724e+00*eV, 3.12032e+00*eV, 3.12911e+00*eV, 3.13942e+00*eV, 3.14683e+00*eV, 3.15726e+00*eV,
        3.16475e+00*eV, 3.17228e+00*eV, 3.17984e+00*eV, 3.19049e+00*eV, 3.20429e+00*eV, 3.21976e+00*eV, 3.23224e+00*eV, 3.24482e+00*eV,
        3.25274e+00*eV, 3.25910e+00*eV, 3.27189e+00*eV, 3.28155e+00*eV, 3.28802e+00*eV, 3.29941e+00*eV, 3.31417e+00*eV, 3.32574e+00*eV,
        3.33572e+00*eV, 3.34576e+00*eV, 3.35249e+00*eV, 3.36094e+00*eV, 3.36943e+00*eV, 3.37967e+00*eV, 3.38998e+00*eV, 3.40035e+00*eV,
        3.41079e+00*eV, 3.42129e+00*eV, 3.43185e+00*eV, 3.43893e+00*eV, 3.44782e+00*eV, 3.45676e+00*eV, 3.46574e+00*eV, 3.47477e+00*eV,
        3.48385e+00*eV, 3.49480e+00*eV, 3.50767e+00*eV, 3.52063e+00*eV, 3.53556e+00*eV, 3.55820e+00*eV, 3.57729e+00*eV, 3.59658e+00*eV,
        3.62001e+00*eV, 3.64375e+00*eV, 3.67588e+00*eV, 3.70036e+00*eV, 3.75876e+00*eV, 3.81466e+00*eV, 3.86776e+00*eV
    };

    const std::vector<G4double> CEBR3_SCINT_OPTICAL_INTENSITIES = {
        3.95471e-04, 4.54059e-04, 4.54059e-04, 4.54059e-04, 4.54059e-04, 5.71236e-04, 6.88413e-04, 7.47001e-04,
        8.64178e-04, 9.81354e-04, 1.15712e-03, 1.39147e-03, 1.74300e-03, 2.09453e-03, 2.32889e-03, 2.79759e-03,
        3.26630e-03, 4.02795e-03, 4.84818e-03, 5.66842e-03, 7.13313e-03, 8.77360e-03, 1.00625e-02, 1.11757e-02,
        1.24647e-02, 1.40465e-02, 1.55113e-02, 1.68002e-02, 1.77376e-02, 1.86750e-02, 1.93781e-02, 2.01397e-02,
        2.06670e-02, 2.11357e-02, 2.15459e-02, 2.17802e-02, 2.20731e-02, 2.23661e-02, 2.27176e-02, 2.31277e-02,
        2.34207e-02, 2.35964e-02, 2.38894e-02, 2.40652e-02, 2.43581e-02, 2.50026e-02, 2.59400e-02, 2.67602e-02,
        2.74633e-02, 2.78734e-02, 2.81663e-02, 2.83421e-02, 2.82835e-02, 2.81663e-02, 2.76390e-02, 2.67016e-02,
        2.54127e-02, 2.40066e-02, 2.18974e-02, 2.03155e-02, 1.83235e-02, 1.63315e-02, 1.43981e-02, 1.25233e-02,
        1.08242e-02, 9.06654e-03, 7.19172e-03, 5.66842e-03, 4.32089e-03, 2.97336e-03, 1.86018e-03, 1.15712e-03,
        6.88413e-04, 3.36883e-04, 1.61118e-04, 4.39412e-05, 4.39412e-05, 4.39412e-05, 4.39412e-05
    };

    const std::vector<G4double> CEBR3_REFR_IDX_ENERGIES = {
        2.34192e-02*eV, 3.04450e-01*eV, 5.85480e-01*eV, 8.66511e-01*eV, 1.10070e+00*eV, 1.33489e+00*eV, 1.52225e+00*eV, 1.75644e+00*eV,
        1.85012e+00*eV, 2.03747e+00*eV, 2.17799e+00*eV, 2.36534e+00*eV, 2.50585e+00*eV, 2.69321e+00*eV, 2.83372e+00*eV, 3.06792e+00*eV,
        3.20843e+00*eV, 3.34895e+00*eV, 3.53630e+00*eV, 3.72365e+00*eV, 3.86417e+00*eV, 4.00468e+00*eV, 4.14520e+00*eV, 4.23888e+00*eV,
        4.33255e+00*eV, 4.51991e+00*eV, 4.70726e+00*eV, 4.89461e+00*eV, 5.08197e+00*eV, 5.12881e+00*eV, 5.26932e+00*eV, 5.31616e+00*eV,
        5.40984e+00*eV, 5.50351e+00*eV, 5.59719e+00*eV, 5.78454e+00*eV, 5.87822e+00*eV, 6.06557e+00*eV, 6.15925e+00*eV, 6.25293e+00*eV,
        6.34660e+00*eV, 6.39344e+00*eV, 6.48712e+00*eV, 6.53396e+00*eV, 6.58080e+00*eV, 6.62763e+00*eV, 6.67447e+00*eV, 6.72131e+00*eV,
        6.81499e+00*eV, 6.86183e+00*eV, 6.95550e+00*eV, 7.00234e+00*eV, 7.09602e+00*eV, 7.14286e+00*eV, 7.23653e+00*eV, 7.28337e+00*eV,
        7.37705e+00*eV, 7.47073e+00*eV, 7.51756e+00*eV, 7.61124e+00*eV, 7.70492e+00*eV, 7.75176e+00*eV, 7.84543e+00*eV, 8.17330e+00*eV,
        8.03279e+00*eV, 8.36066e+00*eV, 8.45433e+00*eV, 8.50117e+00*eV, 8.59485e+00*eV, 8.68852e+00*eV, 8.78220e+00*eV, 8.92272e+00*eV,
        9.01639e+00*eV, 9.11007e+00*eV, 9.25059e+00*eV, 9.39110e+00*eV, 9.62529e+00*eV, 9.81265e+00*eV, 9.90632e+00*eV, 1.00937e+01*eV,
        1.02342e+01*eV, 1.03747e+01*eV, 1.05152e+01*eV, 1.05621e+01*eV, 1.07026e+01*eV, 1.08431e+01*eV, 1.09836e+01*eV, 1.12178e+01*eV,
        1.13583e+01*eV, 1.15457e+01*eV, 1.17330e+01*eV, 1.19204e+01*eV, 1.21077e+01*eV, 1.23419e+01*eV, 1.25293e+01*eV, 1.27635e+01*eV,
        1.29508e+01*eV, 1.30445e+01*eV, 1.31850e+01*eV, 1.35129e+01*eV, 1.39344e+01*eV, 1.41686e+01*eV, 1.43560e+01*eV, 1.45433e+01*eV,
        1.47775e+01*eV, 1.50117e+01*eV, 1.52459e+01*eV, 1.54801e+01*eV, 1.56674e+01*eV, 1.58548e+01*eV, 1.61358e+01*eV, 1.63700e+01*eV,
        1.66979e+01*eV, 1.68852e+01*eV, 1.71194e+01*eV, 1.72600e+01*eV, 1.73536e+01*eV, 1.74941e+01*eV, 1.76347e+01*eV, 1.77283e+01*eV,
        1.78689e+01*eV, 1.80094e+01*eV, 1.82436e+01*eV, 1.84309e+01*eV, 1.86183e+01*eV, 1.88056e+01*eV, 1.89461e+01*eV, 1.91335e+01*eV,
        1.93677e+01*eV, 1.95550e+01*eV, 1.96956e+01*eV, 1.99297e+01*eV, 2.01171e+01*eV, 2.03044e+01*eV, 2.04450e+01*eV, 2.05386e+01*eV,
        2.06792e+01*eV, 2.08197e+01*eV, 2.11007e+01*eV, 2.12881e+01*eV, 2.14286e+01*eV, 2.15691e+01*eV, 2.16628e+01*eV, 2.17564e+01*eV,
        2.18033e+01*eV, 2.18970e+01*eV, 2.19906e+01*eV, 2.20843e+01*eV, 2.21311e+01*eV, 2.22717e+01*eV, 2.23653e+01*eV, 2.24122e+01*eV,
        2.26464e+01*eV, 2.26464e+01*eV, 2.27869e+01*eV, 2.28337e+01*eV, 2.29274e+01*eV, 2.30679e+01*eV, 2.30211e+01*eV, 2.31148e+01*eV,
        2.32084e+01*eV, 2.33958e+01*eV, 2.35831e+01*eV, 2.37237e+01*eV, 2.38642e+01*eV, 2.39110e+01*eV, 2.40047e+01*eV, 2.40984e+01*eV,
        2.41452e+01*eV, 2.42389e+01*eV, 2.43794e+01*eV, 2.45199e+01*eV, 2.46604e+01*eV, 2.48009e+01*eV, 2.49415e+01*eV, 2.50820e+01*eV,
        2.52225e+01*eV, 2.54098e+01*eV, 2.55504e+01*eV, 2.57377e+01*eV, 2.59719e+01*eV, 2.62529e+01*eV, 2.65340e+01*eV, 2.68618e+01*eV,
        2.72365e+01*eV, 2.75644e+01*eV, 2.78454e+01*eV, 2.81733e+01*eV, 2.84543e+01*eV, 2.87822e+01*eV, 2.90164e+01*eV, 2.93443e+01*eV,
        2.95316e+01*eV, 2.98595e+01*eV, 3.00468e+01*eV, 3.03279e+01*eV, 3.06089e+01*eV, 3.08431e+01*eV, 3.10773e+01*eV, 3.13583e+01*eV,
        3.16393e+01*eV, 3.18735e+01*eV, 3.21077e+01*eV, 3.24356e+01*eV, 3.27635e+01*eV, 3.29977e+01*eV, 3.32787e+01*eV, 3.36534e+01*eV,
        3.39344e+01*eV, 3.42155e+01*eV, 3.44965e+01*eV, 3.48244e+01*eV, 3.51054e+01*eV, 3.54333e+01*eV, 3.58080e+01*eV, 3.62295e+01*eV,
        3.66511e+01*eV, 3.70726e+01*eV, 3.76347e+01*eV, 3.80094e+01*eV, 3.83372e+01*eV, 3.86651e+01*eV, 3.90398e+01*eV, 3.94614e+01*eV,
        3.97892e+01*eV
    };

    const std::vector<G4double> CEBR3_REFR_IDXS = {
        2.20189e+00, 2.20662e+00, 2.21136e+00, 2.20662e+00, 2.20662e+00, 2.22082e+00, 2.23975e+00, 2.26814e+00,
        2.29180e+00, 2.32492e+00, 2.36751e+00, 2.41009e+00, 2.46215e+00, 2.49054e+00, 2.51893e+00, 2.49054e+00,
        2.45741e+00, 2.42429e+00, 2.40536e+00, 2.42902e+00, 2.46688e+00, 2.50946e+00, 2.54732e+00, 2.59937e+00,
        2.64669e+00, 2.69874e+00, 2.74606e+00, 2.76972e+00, 2.76025e+00, 2.73186e+00, 2.70347e+00, 2.67981e+00,
        2.65615e+00, 2.62303e+00, 2.58517e+00, 2.53785e+00, 2.50473e+00, 2.45268e+00, 2.41009e+00, 2.36751e+00,
        2.32019e+00, 2.26341e+00, 2.23028e+00, 2.17823e+00, 2.13565e+00, 2.09306e+00, 2.04574e+00, 1.98896e+00,
        1.94164e+00, 1.87539e+00, 1.81388e+00, 1.75237e+00, 1.70032e+00, 1.63407e+00, 1.57256e+00, 1.49685e+00,
        1.41167e+00, 1.34543e+00, 1.26498e+00, 1.20347e+00, 1.13249e+00, 1.07571e+00, 1.03312e+00, 1.02839e+00,
        1.00946e+00, 1.06151e+00, 1.09464e+00, 1.13722e+00, 1.17981e+00, 1.21767e+00, 1.28391e+00, 1.35016e+00,
        1.41167e+00, 1.45899e+00, 1.50158e+00, 1.55836e+00, 1.59621e+00, 1.62934e+00, 1.66719e+00, 1.68139e+00,
        1.67192e+00, 1.65300e+00, 1.62461e+00, 1.58202e+00, 1.54416e+00, 1.48738e+00, 1.42587e+00, 1.36909e+00,
        1.31703e+00, 1.27918e+00, 1.23186e+00, 1.17981e+00, 1.12303e+00, 1.07098e+00, 1.00946e+00, 9.43218e-01,
        8.91167e-01, 8.58044e-01, 8.20189e-01, 7.91798e-01, 7.63407e-01, 7.16088e-01, 6.64038e-01, 6.11987e-01,
        5.74132e-01, 5.31546e-01, 4.79495e-01, 4.17981e-01, 3.65931e-01, 3.28076e-01, 2.90221e-01, 2.57098e-01,
        2.38170e-01, 2.61830e-01, 2.90221e-01, 3.32808e-01, 3.56467e-01, 3.94322e-01, 4.32177e-01, 4.70032e-01,
        5.07886e-01, 5.45741e-01, 5.74132e-01, 6.11987e-01, 6.45110e-01, 6.87697e-01, 7.25552e-01, 7.49211e-01,
        8.10726e-01, 8.58044e-01, 9.14826e-01, 9.62145e-01, 1.01420e+00, 1.06625e+00, 1.10883e+00, 1.15142e+00,
        1.20347e+00, 1.22713e+00, 1.23186e+00, 1.22713e+00, 1.21293e+00, 1.18454e+00, 1.16088e+00, 1.12303e+00,
        1.07571e+00, 1.02839e+00, 9.81073e-01, 9.38486e-01, 8.86435e-01, 8.43849e-01, 7.91798e-01, 7.49211e-01,
        6.92429e-01, 6.16719e-01, 5.45741e-01, 4.79495e-01, 3.99054e-01, 3.23344e-01, 2.71293e-01, 2.19243e-01,
        1.67192e-01, 1.24606e-01, 9.62145e-02, 1.34069e-01, 1.95584e-01, 2.57098e-01, 2.94953e-01, 3.42271e-01,
        3.84858e-01, 4.32177e-01, 4.65300e-01, 4.84227e-01, 4.74763e-01, 4.60568e-01, 4.41640e-01, 4.32177e-01,
        4.51104e-01, 4.74763e-01, 4.98423e-01, 5.41009e-01, 5.74132e-01, 5.97792e-01, 6.16719e-01, 6.30915e-01,
        6.49842e-01, 6.64038e-01, 6.68770e-01, 6.73502e-01, 6.78233e-01, 6.78233e-01, 6.92429e-01, 7.11356e-01,
        7.20820e-01, 7.30284e-01, 7.30284e-01, 7.35016e-01, 7.35016e-01, 7.39748e-01, 7.49211e-01, 7.49211e-01,
        7.58675e-01, 7.72871e-01, 7.77603e-01, 7.87066e-01, 7.91798e-01, 8.01262e-01, 8.05994e-01, 8.15457e-01,
        8.20189e-01, 8.20189e-01, 8.24921e-01, 8.34385e-01, 8.34385e-01, 8.43849e-01, 8.48580e-01, 8.53312e-01,
        8.53312e-01, 8.58044e-01, 8.67508e-01, 8.72240e-01, 8.72240e-01, 8.76972e-01, 8.76972e-01, 8.81703e-01,
        8.76972e-01
    };

    const std::vector<G4double> CEBR3_ABS_LEN_ENERGIES = {
        0.00000e+00*eV, 1.18329e+00*eV, 2.06497e+00*eV, 2.38979e+00*eV, 2.71462e+00*eV, 2.94664e+00*eV, 3.17865e+00*eV, 3.68910e+00*eV,
        4.10673e+00*eV, 4.38515e+00*eV, 4.66357e+00*eV, 4.98840e+00*eV, 5.17401e+00*eV, 5.31323e+00*eV, 5.45244e+00*eV, 5.68445e+00*eV,
        5.96288e+00*eV, 6.14849e+00*eV, 6.28770e+00*eV, 6.47332e+00*eV, 6.61253e+00*eV, 6.84455e+00*eV, 7.03016e+00*eV, 7.12297e+00*eV,
        7.30858e+00*eV, 7.49420e+00*eV, 7.58701e+00*eV, 7.67981e+00*eV, 7.77262e+00*eV, 7.86543e+00*eV, 8.00464e+00*eV, 8.05104e+00*eV,
        8.19026e+00*eV, 8.32947e+00*eV, 8.46868e+00*eV, 8.56148e+00*eV, 8.70070e+00*eV, 8.79350e+00*eV, 8.93271e+00*eV, 9.11833e+00*eV,
        9.35035e+00*eV, 9.48956e+00*eV, 9.67517e+00*eV, 9.76798e+00*eV, 9.86079e+00*eV, 1.00000e+01*eV, 1.01856e+01*eV, 1.03248e+01*eV,
        1.04640e+01*eV, 1.06497e+01*eV, 1.08817e+01*eV, 1.12529e+01*eV, 1.14849e+01*eV, 1.16705e+01*eV, 1.19026e+01*eV, 1.22274e+01*eV,
        1.25986e+01*eV, 1.27378e+01*eV, 1.28770e+01*eV, 1.30626e+01*eV, 1.32019e+01*eV, 1.32947e+01*eV, 1.34339e+01*eV, 1.35731e+01*eV,
        1.38051e+01*eV, 1.40139e+01*eV, 1.42691e+01*eV, 1.45940e+01*eV, 1.47332e+01*eV, 1.49188e+01*eV, 1.51972e+01*eV, 1.53364e+01*eV,
        1.54756e+01*eV, 1.56613e+01*eV, 1.58005e+01*eV, 1.60325e+01*eV, 1.62181e+01*eV, 1.64037e+01*eV, 1.65893e+01*eV, 1.68213e+01*eV,
        1.69606e+01*eV, 1.71694e+01*eV, 1.74710e+01*eV, 1.77494e+01*eV, 1.83063e+01*eV, 1.86311e+01*eV, 1.90487e+01*eV, 1.92343e+01*eV,
        1.94664e+01*eV, 1.97912e+01*eV, 2.01856e+01*eV, 2.03480e+01*eV, 2.05336e+01*eV, 2.06729e+01*eV, 2.08121e+01*eV, 2.09977e+01*eV,
        2.10441e+01*eV, 2.11833e+01*eV, 2.13689e+01*eV, 2.16009e+01*eV, 2.17865e+01*eV, 2.20650e+01*eV, 2.22970e+01*eV, 2.24362e+01*eV,
        2.25290e+01*eV, 2.26682e+01*eV, 2.28074e+01*eV
    };

    // absorption lengths are super long so just make them 1 meter
    // update 13 November 2021:
    //  total internal reflection is a huge issue so the 1km attenuation length makes more sense (maybe?)
    const std::vector<G4double> CEBR3_ABS_LEN(CEBR3_ABS_LEN_ENERGIES.size(), 1. * km);
    // these are the actual calculated values but . . . they're ridiculous
        /* 1.00000e+20*cm, 1.00000e+20*cm, 1.00000e+20*cm, 1.06000e+06*cm, 2.65000e+05*cm, 1.59000e+05*cm, 1.13571e+05*cm, 1.06000e+05*cm, */
        /* 8.83333e+04*cm, 6.62500e+04*cm, 4.81818e+04*cm, 3.18000e+04*cm, 2.44615e+04*cm, 2.23944e+04*cm, 2.02548e+04*cm, 1.80682e+04*cm, */
        /* 1.57426e+04*cm, 1.40088e+04*cm, 1.27711e+04*cm, 1.16484e+04*cm, 1.10417e+04*cm, 1.03583e+04*cm, 1.00952e+04*cm, 9.96865e+03*cm, */
        /* 1.00315e+04*cm, 1.02251e+04*cm, 1.04262e+04*cm, 1.07797e+04*cm, 1.12766e+04*cm, 1.19101e+04*cm, 1.27200e+04*cm, 1.36481e+04*cm, */
        /* 1.47222e+04*cm, 1.63077e+04*cm, 1.74725e+04*cm, 1.84884e+04*cm, 1.95092e+04*cm, 2.00000e+04*cm, 1.97516e+04*cm, 1.88166e+04*cm, */
        /* 1.74725e+04*cm, 1.61421e+04*cm, 1.50000e+04*cm, 1.45205e+04*cm, 1.40708e+04*cm, 1.30864e+04*cm, 1.16058e+04*cm, 1.09278e+04*cm, */
        /* 1.00000e+04*cm, 9.46429e+03*cm, 8.90756e+03*cm, 8.50267e+03*cm, 8.28125e+03*cm, 8.05063e+03*cm, 7.87129e+03*cm, 7.66265e+03*cm, */
        /* 7.57143e+03*cm, 7.50000e+03*cm, 7.51773e+03*cm, 7.58950e+03*cm, 7.69976e+03*cm, 7.79412e+03*cm, 7.91045e+03*cm, 7.95000e+03*cm, */
        /* 7.85185e+03*cm, 7.73723e+03*cm, 7.66265e+03*cm, 7.71845e+03*cm, 7.85185e+03*cm, 7.96992e+03*cm, 8.01008e+03*cm, 8.13299e+03*cm, */
        /* 8.25974e+03*cm, 8.50267e+03*cm, 9.03409e+03*cm, 9.54955e+03*cm, 1.01274e+04*cm, 1.10801e+04*cm, 1.23735e+04*cm, 1.43891e+04*cm, */
        /* 1.72826e+04*cm, 2.13423e+04*cm, 2.74138e+04*cm, 3.34737e+04*cm, 4.07692e+04*cm, 5.04762e+04*cm, 6.00000e+04*cm, 6.62500e+04*cm, */
        /* 7.22727e+04*cm, 5.78182e+04*cm, 4.41667e+04*cm, 3.74118e+04*cm, 3.11765e+04*cm, 2.46512e+04*cm, 1.88166e+04*cm, 1.51429e+04*cm, */
        /* 1.33054e+04*cm, 1.14388e+04*cm, 9.63636e+03*cm, 8.13299e+03*cm, 6.73729e+03*cm, 6.08031e+03*cm, 5.88889e+03*cm, 5.72973e+03*cm, */
        /* 5.57895e+03*cm, 5.46392e+03*cm, 5.40816e+03*cm */
    /* }; */

}
